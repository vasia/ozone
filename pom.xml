<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<modelVersion>4.0.0</modelVersion>

	<groupId>eu.stratosphere</groupId>
	<artifactId>ozone</artifactId>
	<version>0.2</version>

	<name>ozone</name>
	<packaging>pom</packaging>
	<url>http://github.com/dimalabs/ozone</url>
	<inceptionYear>2013</inceptionYear>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>stratosphere</distribution>
		</license>
	</licenses>

	<developers>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<pluginRepositories>
	</pluginRepositories>

	<dependencies>
	
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.3</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>r09</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.5</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.4.9</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.4.9</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.1</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		
	</dependencies>

	<dependencyManagement>
		<!-- this section defines the module versions that are used if nothing else is specified. -->
		<dependencies>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-core</artifactId>
				<version>0.20.203.0</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<reporting>
		<plugins>

			<plugin>
				<!-- just define the Java version to be used for compiling and plugins -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- measure and report source code complexity -->
<!--			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>javancss-maven-plugin</artifactId>
				<version>2.0</version>
			</plugin> -->

			<!-- analyze dependencies in source code -->
<!--			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version></version>
			</plugin> -->

			<!-- disabled because currently no SCM defined generates changelog <plugin> 
				<groupId>org.apache.maven.plugins</groupId> <artifactId>maven-changelog-plugin</artifactId> 
				<version>2.2-SNAPSHOT</version> </plugin> -->

			<!-- report occurrences of various todo markers in code -->
<!--			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<tags>
						<tag>TODO</tag>
						<tag>FIXME</tag>
						<tag>@todo</tag>
						<tag>@deprecated</tag>
					</tags>
				</configuration>
			</plugin> -->

			<!-- todo: reenable when SCM is available <plugin> <groupId>org.codehaus.mojo</groupId> 
				<artifactId>scmchangelog-maven-plugin</artifactId> <version>1.2</version> 
				<configuration> <connectionUrl>scm:svn:https://projekte.itmc.tu-dortmund.de/svn/sla4dgrid/trunk</connectionUrl> 
				<tagBase>https://projekte.itmc.tu-dortmund.de/svn/sla4dgrid/tags/</tagBase> 
				<filter>.*</filter> </configuration> </plugin> -->

			<!-- generates cross references in code so that you can click in the reports and jump to the respective lines -->
<!--			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jxr-maven-plugin</artifactId>
				<configuration>
					<linkJavadoc>true</linkJavadoc>
				</configuration>
			</plugin> -->

			<!-- discovers frequent bugs in programs -->
<!--			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.0.1</version>
				<configuration>
					<effort>Max</effort>
					<threshold>Medium</threshold>
					<findbugsXmlOutput>true</findbugsXmlOutput>
					<xmlOutput>true</xmlOutput>
				</configuration>
			</plugin> -->

			<!-- maven source code analysis for frequent bugs -->
<!--			<plugin>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<targetJdk>1.6</targetJdk>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>pmd</report>
							<report>cpd</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin> -->

			<!-- generation of JavaDoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.5</version>
			</plugin>

			<!-- style checker -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<configLocation>stratosphere/checkstyle.xml</configLocation>
				</configuration>
			</plugin>

			<!-- execution of Unit Tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.7</version>
			</plugin>

			<!-- check coverage of tests -->
<!--			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
				</configuration>
			</plugin> -->

			<!-- Generator for QA reports, summarizes various inputs and draws diagrams 
				indicating improvements/deterioration <plugin> <groupId>net.objectlab</groupId> 
				<artifactId>mvn-qalab-plugin</artifactId> <version>2.2</version> <reportSets> 
				<reportSet> <reports> <report>chart</report> <report>report-merge-chart</report> 
				<report>report-movers-all</report> </reports> </reportSet> </reportSets> 
				</plugin> -->

<!--			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>dashboard-maven-plugin</artifactId>
			</plugin> -->

		</plugins>
	</reporting>

	<build>
		<plugins>
			<plugin>
				<!-- just define the Java version to be used for compiling and plugins -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<!-- High optimization, no debugging <compilerArgument>-g:none -O</compilerArgument> -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>javadoc:aggregate-jar</id>
						<goals>
							<goal>aggregate-jar</goal>
						</goals>
						<!-- use "package" phase to include JavaDocs in build -->
						<phase>site</phase>
						<configuration>
							<quiet>true</quiet>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<!-- exclude example classes from JavaDoc -->
					<excludePackageNames>eu.stratosphere.nephele.example.*:eu.stratosphere.pact.example.*</excludePackageNames>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<argLine>-Xms512m -Xmx512m</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<argLine>-Xms512m -Xmx512m</argLine>
				</configuration>
			</plugin>
			<plugin>
				<!-- plugin that tests whether the code style is appropriate -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.6</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<classpathContainers>
						<classpathContainer>
							org.eclipse.jdt.launching.JRE_CONTAINER
						</classpathContainer>
					</classpathContainers>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
	</profiles>

	<modules>
		<module>nephele</module>
		<module>pact</module>
		<module>stratosphere-dist</module>
	</modules>
</project>
